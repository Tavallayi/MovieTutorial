{
  "version": 3,
  "sources": ["../../../../../Modules/Default/Genre/GenrePage.ts", "../../../../../Modules/ServerTypes/Default/GenreColumns.ts", "../../../../../Modules/ServerTypes/Default/GenreForm.ts", "../../../../../Modules/ServerTypes/Default/GenreRow.ts", "../../../../../Modules/ServerTypes/Default/GenreService.ts", "../../../../../Modules/Default/Genre/GenreGrid.ts", "../../../../../Modules/Default/Genre/GenreDialog.ts"],
  "sourcesContent": ["\uFEFFimport { initFullHeightGridPage } from '@serenity-is/corelib';\r\nimport { GenreGrid } from './GenreGrid';\r\n\r\nexport default function pageInit() {\n    initFullHeightGridPage(new GenreGrid($('#GridDiv')).element);\n}", "\uFEFFimport { ColumnsBase, fieldsProxy } from \"@serenity-is/corelib\";\nimport { Column } from \"@serenity-is/sleekgrid\";\nimport { GenreRow } from \"./GenreRow\";\n\nexport interface GenreColumns {\n    GenreId: Column<GenreRow>;\n    Name: Column<GenreRow>;\n}\n\nexport class GenreColumns extends ColumnsBase<GenreRow> {\n    static readonly columnsKey = 'Default.Genre';\n    static readonly Fields = fieldsProxy<GenreColumns>();\n}", "\uFEFFimport { StringEditor, PrefixedContext, initFormType } from \"@serenity-is/corelib\";\n\nexport interface GenreForm {\n    Name: StringEditor;\n}\n\nexport class GenreForm extends PrefixedContext {\n    static readonly formKey = 'Default.Genre';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!GenreForm.init)  {\n            GenreForm.init = true;\n\n            var w0 = StringEditor;\n\n            initFormType(GenreForm, [\n                'Name', w0\n            ]);\n        }\n    }\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib\";\n\nexport interface GenreRow {\n    GenreId?: number;\n    Name?: string;\n}\n\nexport abstract class GenreRow {\n    static readonly idProperty = 'GenreId';\n    static readonly nameProperty = 'Name';\n    static readonly localTextPrefix = 'Default.Genre';\n    static readonly deletePermission = '{';\n    static readonly insertPermission = '{';\n    static readonly readPermission = '{';\n    static readonly updatePermission = '{';\n\n    static readonly Fields = fieldsProxy<GenreRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib\";\nimport { GenreRow } from \"./GenreRow\";\n\nexport namespace GenreService {\n    export const baseUrl = 'Default/Genre';\n\n    export declare function Create(request: SaveRequest<GenreRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<GenreRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<GenreRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<GenreRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"Default/Genre/Create\",\n        Update: \"Default/Genre/Update\",\n        Delete: \"Default/Genre/Delete\",\n        Retrieve: \"Default/Genre/Retrieve\",\n        List: \"Default/Genre/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>GenreService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFimport { GenreColumns, GenreRow, GenreService } from '@/ServerTypes/Default';\r\nimport { Decorators, EntityGrid } from '@serenity-is/corelib';\r\nimport { GenreDialog } from './GenreDialog';\r\n\r\n@Decorators.registerClass('MovieTutorial.Default.GenreGrid')\nexport class GenreGrid extends EntityGrid<GenreRow, any> {\n    protected getColumnsKey() { return GenreColumns.columnsKey; }\n    protected getDialogType() { return GenreDialog; }\n    protected getRowDefinition() { return GenreRow; }\n    protected getService() { return GenreService.baseUrl; }\n\n    constructor(container: JQuery) {\n        super(container);\n    }\n}", "\uFEFFimport { GenreForm, GenreRow, GenreService } from '@/ServerTypes/Default';\r\nimport { Decorators, EntityDialog } from '@serenity-is/corelib';\r\n\r\n@Decorators.registerClass('MovieTutorial.Default.GenreDialog')\nexport class GenreDialog extends EntityDialog<GenreRow, any> {\n    protected getFormKey() { return GenreForm.formKey; }\n    protected getRowDefinition() { return GenreRow; }\n    protected getService() { return GenreService.baseUrl; }\n\n    protected form = new GenreForm(this.idPrefix);\n}"],
  "mappings": "uEAAC,IAAAA,EAAuC,SCAvC,IAAAC,EAAyC,SASnC,IAAMC,EAAN,MAAMA,UAAqB,aAAsB,CAGxD,EAHwDC,EAAAD,EAAA,gBAA3CA,EACO,WAAa,gBADpBA,EAEO,UAAS,eAA0B,EAFhD,IAAME,EAANF,ECTN,IAAAG,EAA4D,SAMtD,IAAMC,EAAN,MAAMA,UAAkB,iBAAgB,CAI3C,YAAYC,EAAgB,CAGxB,GAFA,MAAMA,CAAM,EAER,CAACD,EAAU,KAAO,CAClBA,EAAU,KAAO,GAEjB,IAAIE,EAAK,kBAET,gBAAaF,EAAW,CACpB,OAAQE,CACZ,CAAC,CACL,CACJ,CACJ,EAjB+CC,EAAAH,EAAA,aAAlCA,EACO,QAAU,gBADvB,IAAMI,EAANJ,ECNN,IAAAK,EAA4B,SAOtB,IAAeC,EAAf,MAAeA,CAAS,CAU/B,EAV+BC,EAAAD,EAAA,YAATA,EACF,WAAa,UADXA,EAEF,aAAe,OAFbA,EAGF,gBAAkB,gBAHhBA,EAIF,iBAAmB,IAJjBA,EAKF,iBAAmB,IALjBA,EAMF,eAAiB,IANfA,EAOF,iBAAmB,IAPjBA,EASF,UAAS,eAAsB,EAT5C,IAAeE,EAAfF,ECPN,IAAAG,EAAuK,SAGvJC,OACAA,EAAA,QAAU,gBAQVA,EAAA,QAAU,CACnB,OAAQ,uBACR,OAAQ,uBACR,OAAQ,uBACR,SAAU,yBACV,KAAM,oBACV,EAEA,CACI,SACA,SACA,SACA,WACA,MACJ,EAAE,QAAQC,GAAK,CACLD,EAAcC,CAAC,EAAI,SAAUC,EAAGC,EAAGC,EAAG,CACxC,SAAO,kBAAeJ,EAAA,QAAU,IAAMC,EAAGC,EAAGC,EAAGC,CAAC,CACpD,CACJ,CAAC,IA3BYJ,MAAA,KCFjB,IAAAK,EAAuC,SCAvC,IAAAC,EAAyC,SAGlC,IAAMC,EAAN,cAA0B,cAA4B,CAAtD,kCAKH,KAAU,KAAO,IAAIC,EAAU,KAAK,QAAQ,EAJlC,YAAa,CAAE,OAAOA,EAAU,OAAS,CACzC,kBAAmB,CAAE,OAAOC,CAAU,CACtC,YAAa,CAAE,OAAOC,EAAa,OAAS,CAG1D,EAN6DC,EAAAJ,EAAA,eAAhDA,EAANK,EAAA,CADN,aAAW,cAAc,mCAAmC,GAChDL,GDCN,IAAMM,EAAN,cAAwB,YAA0B,CAC3C,eAAgB,CAAE,OAAOC,EAAa,UAAY,CAClD,eAAgB,CAAE,OAAOC,CAAa,CACtC,kBAAmB,CAAE,OAAOC,CAAU,CACtC,YAAa,CAAE,OAAOC,EAAa,OAAS,CAEtD,YAAYC,EAAmB,CAC3B,MAAMA,CAAS,CACnB,CACJ,EATyDC,EAAAN,EAAA,aAA5CA,EAANO,EAAA,CADN,aAAW,cAAc,iCAAiC,GAC9CP,GLFE,SAARQ,GAA4B,IAC/B,0BAAuB,IAAIC,EAAU,EAAE,UAAU,CAAC,EAAE,OAAO,CAC/D,CAFwBC,EAAAF,EAAA",
  "names": ["import_corelib", "import_corelib", "_GenreColumns", "__name", "GenreColumns", "import_corelib", "_GenreForm", "prefix", "w0", "__name", "GenreForm", "import_corelib", "_GenreRow", "__name", "GenreRow", "import_corelib", "GenreService", "x", "r", "s", "o", "import_corelib", "import_corelib", "GenreDialog", "GenreForm", "GenreRow", "GenreService", "__name", "__decorateClass", "GenreGrid", "GenreColumns", "GenreDialog", "GenreRow", "GenreService", "container", "__name", "__decorateClass", "pageInit", "GenreGrid", "__name"]
}
